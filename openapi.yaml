openapi: 3.0.1
info:
  title: ssh
  description: Secure Shell from Direktiv
  version: "1.0"
  x-direktiv-meta:
    container: gcr.io/direktiv/functions/ssh
    maintainer: "[direktiv.io](https://www.direktiv.io) "
    issues: https://github.com/direktiv-apps/ssh/issues
    url: https://github.com/direktiv-apps/ssh
    categories:
    - network
    license: "[Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)"
    long-description: This function allows to start a secure shell (SSH) with a remote
      server. It supprots username/passname as well as SSH key authentication.  To
      sue SSH key authentication the certificate has to be provided by a secret useing
      the `files` input. The function can execute multiple commands.
servers:
- url: /
paths:
  /:
    post:
      parameters:
      - name: Direktiv-ActionID
        in: header
        description: "direktiv action id is an UUID. \nFor development it can be set\
          \ to 'development'\n"
        schema:
          type: string
          default: development
      - name: Direktiv-TempDir
        in: header
        description: |
          direktiv temp dir is the working directory for that request
          For development it can be set to e.g. '/tmp'
        schema:
          type: string
          default: /tmp
      requestBody:
        content:
          application/json:
            schema:
              required:
              - auth
              - host
              type: object
              properties:
                files:
                  type: array
                  description: File to create before running commands.
                  items:
                    $ref: '#/components/schemas/direktivFile'
                host:
                  required:
                  - name
                  type: object
                  properties:
                    name:
                      type: string
                      description: Hostname or IP to SSH to
                    port:
                      type: integer
                      description: SSH port
                    verbose:
                      type: boolean
                      description: Enables debug output on the connection
                auth:
                  required:
                  - username
                  type: object
                  properties:
                    username:
                      type: string
                      description: Username for authentication
                    password:
                      type: string
                      description: Password if username/password authentication
                    certificate:
                      type: string
                      description: Path to certificate for SSH key based authentication
                commands:
                  type: array
                  description: Array of SSH commands.
                  items:
                    type: object
                    properties:
                      command:
                        type: string
                        description: Command to run
                      silent:
                        type: boolean
                        description: If set to false the command will not print output
                          to logs.
                        default: false
                      print:
                        type: boolean
                        description: If set to false the command will not print the
                          full command with arguments to logs.
                        default: true
                      continue:
                        type: boolean
                        description: "Stops excecution if command fails, otherwise\
                          \ proceeds with next command"
        required: false
      responses:
        "200":
          description: List of executed SSH commands.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ssh:
                    type: array
                    items:
                      required:
                      - result
                      - success
                      type: object
                      properties:
                        success:
                          type: boolean
                        result:
                          type: object
            ssh:
              example:
              - result: Sa 1. Okt 13:25:38 CEST 2021
                success: true
        default:
          description: generic error response
          headers:
            Direktiv-ErrorMessage:
              schema:
                type: string
            Direktiv-ErrorCode:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      x-direktiv-function: |-
        functions:
        - id: ssh
          image: gcr.io/direktiv/functions/ssh:1.0
          type: knative-workflow
      x-direktiv-examples:
      - title: Password authentication
        content: "- id: ssh \n  type: action\n  action:\n    function: ssh\n    secrets:\
          \ [\"sshpwd\"]\n    input: \n      host:\n        name: 10.100.6.16\n  \
          \      port: 2022\n        verbose: true\n      auth:\n        username:\
          \ direktiv\n        password: jq(.secrets.sshpwd)\n      commands:\n   \
          \   - command: date\n  catch:\n  - error: \"*\""
      - title: SSH key authentication
        content: "- id: ssh \n  type: action\n  action:\n    function: ssh\n    secrets:\
          \ [\"sshcert\"]\n    input: \n      files:\n      - name: cert\n       \
          \ data: |\n          jq(.secrets.sshcert)\n        mode: \"0400\"\n    \
          \  host:\n        name: 10.100.6.16\n      auth:\n        username: direktiv\n\
          \        certificate: cert\n      commands:\n      - command: date\n  catch:\n\
          \  - error: \"*\""
      x-direktiv-secrets:
      - name: sshcert
        description: Certificate to use for SSH key authentication
      - name: sshpwd
        description: Password for username / password authentication
      x-direktiv:
        cmds:
        - action: foreach
          loop: .Commands
          exec: "{{- if .Body.Auth.Password }}\nsshpass -e\n{{ end }}\nssh \n{{ if\
            \ .Body.Host.Verbose }}\n-vv\n{{ end }}\n{{ if .Body.Auth.Certificate\
            \ }}\n-i {{ .Body.Auth.Certificate }} \n{{ end }}\n{{- .Body.Auth.Username\
            \ }}@{{ .Body.Host.Name }} \n-o StrictHostKeyChecking=accept-new \n{{\
            \ if .Body.Host.Port }} -p {{ .Body.Host.Port }}{{ end }} \n'{{- .Item.Command\
            \ }}'"
          silent: "{{ .Item.Silent }}"
          print: "{{ .Item.Print }}"
          continue: "{{ .Item.Continue }}"
          env:
          - "SSHPASS={{ .Body.Auth.Password }}"
        output: |
          {
            "ssh": {{ index . 0 | toJson }}
          }
      x-direktiv-errors:
        io.direktiv.command.error: Command execution failed
        io.direktiv.output.error: Template error for output generation of the service
        io.direktiv.ri.error: Can not create information object from request
      x-codegen-request-body-name: body
components:
  schemas:
    direktivFile:
      type: object
      x-go-type:
        type: DirektivFile
        import:
          package: github.com/direktiv/apps/go/pkg/apps
    error:
      required:
      - errorCode
      - errorMessage
      type: object
      properties:
        errorCode:
          type: string
        errorMessage:
          type: string
x-original-swagger-version: "2.0"

